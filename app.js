/*

Цель: научиться управлять потоком кода с использованием условных операторов IF ELSE, чтобы принимать решения на основании заданных условий.

Линейный Код и Условия
Обычно код пишется линейно: объявления переменных, присваивание значений, манипуляции.
Реальные проекты требуют управления потоком кода с помощью условий, например, доступ к функциям в зависимости от прав пользователя.

Принцип IF ELSE
IF ELSE позволяет выполнить код, если условие истинно (IF), и другой код, если условие ложно (ELSE).
Пример: проверка, достаточно ли у пользователя денег для покупки продукта.

Работа с IF ELSE
Основной Синтаксис:```javascript if (условие) { // код, если условие истинно } else { // код, если условие ложно }
Утверждения внутри IF: принимают true или false.
Прямые и сложные условия: иногда условия задаются непосредственно в IF, иногда выносятся в переменные или функции для упрощения чтения кода.
Расширенная конструкция: ELSE IF
Используется для проверки нескольких условий подряд.
Ключевые слова: else if.
Работает на принципе исключающих условий: код выполняется по первому совпавшему условию, остальные игнорируются.

Сравнение с Switch Statement
При большом количестве условий код может стать трудночитаемым.
Switch Statement — альтернатива для управления множеством условий более структурированно.

*/

const money = 10;

if (money > 50) {
  console.log('Может купить наш продукт'); 
} else if (money > 5)  {
  console.log('Куплен мини продукт')
}

else {
  console.log('Недостаточно средств');
}

console.log('Итог')
